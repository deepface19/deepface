import { Handler, Message, RpcConfig, ReqMessage, CallConfigObject } from './types';
export default abstract class RPC {
    protected name: string;
    protected target: string;
    private timeout;
    protected handlers: Map<string, Handler>;
    private calls;
    constructor(config: RpcConfig);
    exposeHandler(name: string, handler: Handler): void;
    removeHandler(name: string): boolean;
    private _call;
    call(handler: string, args?: any[] | null, config?: CallConfigObject): Promise<any>;
    protected onMessage(eventMessage: any): void;
    protected onRequestMessage(message: ReqMessage): void;
    private onResponseMessage;
    stop(): void;
    protected abstract sendMessage(message: Message): void;
}
